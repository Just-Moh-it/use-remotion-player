"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@remotion+player@4.0.47_react-dom@18.2.0_react@18.2.0";
exports.ids = ["vendor-chunks/@remotion+player@4.0.47_react-dom@18.2.0_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@remotion+player@4.0.47_react-dom@18.2.0_react@18.2.0/node_modules/@remotion/player/dist/esm/index.mjs":
/*!***************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@remotion+player@4.0.47_react-dom@18.2.0_react@18.2.0/node_modules/@remotion/player/dist/esm/index.mjs ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Player: () => (/* binding */ Player),\n/* harmony export */   PlayerInternals: () => (/* binding */ PlayerInternals),\n/* harmony export */   Thumbnail: () => (/* binding */ Thumbnail)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/.pnpm/next@13.5.4_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var remotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! remotion */ \"(ssr)/../../node_modules/.pnpm/remotion@4.0.47_react-dom@18.2.0_react@18.2.0/node_modules/remotion/dist/esm/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/../../node_modules/.pnpm/next@13.5.4_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/shared/react-jsx-runtime.js\");\n\"use client\";\n\n\n\n\nconst calculatePlayerSize = ({ currentSize, width, height, compositionWidth, compositionHeight, }) => {\n    if (width !== undefined && height === undefined) {\n        return {\n            aspectRatio: [compositionWidth, compositionHeight].join('/'),\n        };\n    }\n    // Opposite: If has height specified, evaluate the height and specify a default width.\n    if (height !== undefined && width === undefined) {\n        return {\n            // Aspect ratio CSS prop will work\n            aspectRatio: [compositionWidth, compositionHeight].join('/'),\n        };\n    }\n    if (!currentSize) {\n        return {\n            width: compositionWidth,\n            height: compositionHeight,\n        };\n    }\n    return {\n        width: compositionWidth,\n        height: compositionHeight,\n    };\n};\n\nconst calculateScale = ({ canvasSize, compositionHeight, compositionWidth, previewSize, }) => {\n    const heightRatio = canvasSize.height / compositionHeight;\n    const widthRatio = canvasSize.width / compositionWidth;\n    const ratio = Math.min(heightRatio, widthRatio);\n    return previewSize === 'auto' ? ratio : Number(previewSize);\n};\nconst calculateCanvasTransformation = ({ previewSize, compositionWidth, compositionHeight, canvasSize, }) => {\n    const scale = calculateScale({\n        canvasSize,\n        compositionHeight,\n        compositionWidth,\n        previewSize,\n    });\n    const correction = 0 - (1 - scale) / 2;\n    const xCorrection = correction * compositionWidth;\n    const yCorrection = correction * compositionHeight;\n    const width = compositionWidth * scale;\n    const height = compositionHeight * scale;\n    const centerX = canvasSize.width / 2 - width / 2;\n    const centerY = canvasSize.height / 2 - height / 2;\n    return {\n        centerX,\n        centerY,\n        xCorrection,\n        yCorrection,\n        scale,\n    };\n};\nconst calculateOuterStyle = ({ config, style, canvasSize, }) => {\n    if (!config) {\n        return {};\n    }\n    return {\n        position: 'relative',\n        overflow: 'hidden',\n        ...calculatePlayerSize({\n            compositionHeight: config.height,\n            compositionWidth: config.width,\n            currentSize: canvasSize,\n            height: style === null || style === void 0 ? void 0 : style.height,\n            width: style === null || style === void 0 ? void 0 : style.width,\n        }),\n        ...style,\n    };\n};\nconst calculateContainerStyle = ({ config, canvasSize, layout, scale, }) => {\n    if (!config || !canvasSize || !layout) {\n        return {};\n    }\n    return {\n        position: 'absolute',\n        width: config.width,\n        height: config.height,\n        display: 'flex',\n        transform: `scale(${scale})`,\n        marginLeft: layout.xCorrection,\n        marginTop: layout.yCorrection,\n        overflow: 'hidden',\n    };\n};\nconst calculateOuter = ({ layout, scale, config, }) => {\n    if (!layout || !config) {\n        return {};\n    }\n    const { centerX, centerY } = layout;\n    return {\n        width: config.width * scale,\n        height: config.height * scale,\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: centerX,\n        top: centerY,\n        overflow: 'hidden',\n    };\n};\n\nconst PlayerEventEmitterContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(undefined);\nconst ThumbnailEmitterContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(undefined);\n\nclass PlayerEmitter {\n    constructor() {\n        this.listeners = {\n            ended: [],\n            error: [],\n            pause: [],\n            play: [],\n            ratechange: [],\n            scalechange: [],\n            seeked: [],\n            timeupdate: [],\n            frameupdate: [],\n            fullscreenchange: [],\n            volumechange: [],\n            mutechange: [],\n        };\n    }\n    addEventListener(name, callback) {\n        this.listeners[name].push(callback);\n    }\n    removeEventListener(name, callback) {\n        this.listeners[name] = this.listeners[name].filter((l) => l !== callback);\n    }\n    dispatchEvent(dispatchName, context) {\n        this.listeners[dispatchName].forEach((callback) => {\n            callback({ detail: context });\n        });\n    }\n    dispatchSeek(frame) {\n        this.dispatchEvent('seeked', {\n            frame,\n        });\n    }\n    dispatchVolumeChange(volume) {\n        this.dispatchEvent('volumechange', {\n            volume,\n        });\n    }\n    dispatchPause() {\n        this.dispatchEvent('pause', undefined);\n    }\n    dispatchPlay() {\n        this.dispatchEvent('play', undefined);\n    }\n    dispatchEnded() {\n        this.dispatchEvent('ended', undefined);\n    }\n    dispatchRateChange(playbackRate) {\n        this.dispatchEvent('ratechange', {\n            playbackRate,\n        });\n    }\n    dispatchScaleChange(scale) {\n        this.dispatchEvent('scalechange', {\n            scale,\n        });\n    }\n    dispatchError(error) {\n        this.dispatchEvent('error', {\n            error,\n        });\n    }\n    dispatchTimeUpdate(event) {\n        this.dispatchEvent('timeupdate', event);\n    }\n    dispatchFrameUpdate(event) {\n        this.dispatchEvent('frameupdate', event);\n    }\n    dispatchFullscreenChange(event) {\n        this.dispatchEvent('fullscreenchange', event);\n    }\n    dispatchMuteChange(event) {\n        this.dispatchEvent('mutechange', event);\n    }\n}\nclass ThumbnailEmitter {\n    constructor() {\n        this.listeners = {\n            error: [],\n        };\n    }\n    addEventListener(name, callback) {\n        this.listeners[name].push(callback);\n    }\n    removeEventListener(name, callback) {\n        this.listeners[name] = this.listeners[name].filter((l) => l !== callback);\n    }\n    dispatchEvent(dispatchName, context) {\n        this.listeners[dispatchName].forEach((callback) => {\n            callback({ detail: context });\n        });\n    }\n    dispatchError(error) {\n        this.dispatchEvent('error', {\n            error,\n        });\n    }\n}\n\nconst useHoverState = (ref) => {\n    const [hovered, stetHovered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const { current } = ref;\n        if (!current) {\n            return;\n        }\n        const onHover = () => {\n            stetHovered(true);\n        };\n        const onLeave = () => {\n            stetHovered(false);\n        };\n        current.addEventListener('mouseenter', onHover);\n        current.addEventListener('mouseleave', onLeave);\n        return () => {\n            current.removeEventListener('mouseenter', onHover);\n            current.removeEventListener('mouseenter', onLeave);\n        };\n    }, [ref]);\n    return hovered;\n};\n\nconst calculateNextFrame = ({ time, currentFrame: startFrame, playbackSpeed, fps, actualLastFrame, actualFirstFrame, framesAdvanced, shouldLoop, }) => {\n    const op = playbackSpeed < 0 ? Math.ceil : Math.floor;\n    const framesToAdvance = op((time * playbackSpeed) / (1000 / fps)) - framesAdvanced;\n    const nextFrame = framesToAdvance + startFrame;\n    const isCurrentFrameOutside = startFrame > actualLastFrame || startFrame < actualFirstFrame;\n    const isNextFrameOutside = nextFrame > actualLastFrame || nextFrame < actualFirstFrame;\n    const hasEnded = !shouldLoop && isNextFrameOutside && !isCurrentFrameOutside;\n    if (playbackSpeed > 0) {\n        // Play forwards\n        if (isNextFrameOutside) {\n            return {\n                nextFrame: actualFirstFrame,\n                framesToAdvance,\n                hasEnded,\n            };\n        }\n        return { nextFrame, framesToAdvance, hasEnded };\n    }\n    // Reverse playback\n    if (isNextFrameOutside) {\n        return { nextFrame: actualLastFrame, framesToAdvance, hasEnded };\n    }\n    return { nextFrame, framesToAdvance, hasEnded };\n};\n\nconst getIsBackgrounded = () => {\n    if (typeof document === 'undefined') {\n        return false;\n    }\n    return document.visibilityState === 'hidden';\n};\nconst useIsBackgrounded = () => {\n    const isBackgrounded = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(getIsBackgrounded());\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const onVisibilityChange = () => {\n            isBackgrounded.current = getIsBackgrounded();\n        };\n        document.addEventListener('visibilitychange', onVisibilityChange);\n        return () => {\n            document.removeEventListener('visibilitychange', onVisibilityChange);\n        };\n    }, []);\n    return isBackgrounded;\n};\n\nconst usePlayer = () => {\n    var _a;\n    const [playing, setPlaying, imperativePlaying] = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.usePlayingState();\n    const [hasPlayed, setHasPlayed] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const playStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(frame);\n    const setFrame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelineSetFrame();\n    const setTimelinePosition = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelineSetFrame();\n    const audioContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SharedAudioContext);\n    const { audioAndVideoTags } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext);\n    const frameRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    frameRef.current = frame;\n    const video = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useVideo();\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const emitter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PlayerEventEmitterContext);\n    const lastFrame = ((_a = config === null || config === void 0 ? void 0 : config.durationInFrames) !== null && _a !== void 0 ? _a : 1) - 1;\n    const isLastFrame = frame === lastFrame;\n    const isFirstFrame = frame === 0;\n    if (!emitter) {\n        throw new TypeError('Expected Player event emitter context');\n    }\n    const seek = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newFrame) => {\n        if (video === null || video === void 0 ? void 0 : video.id) {\n            setTimelinePosition((c) => ({ ...c, [video.id]: newFrame }));\n        }\n        emitter.dispatchSeek(newFrame);\n    }, [emitter, setTimelinePosition, video === null || video === void 0 ? void 0 : video.id]);\n    const play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        if (imperativePlaying.current) {\n            return;\n        }\n        setHasPlayed(true);\n        if (isLastFrame) {\n            seek(0);\n        }\n        /**\n         * Play silent audio tags to warm them up for autoplay\n         */\n        if (audioContext && audioContext.numberOfAudioTags > 0 && e) {\n            audioContext.playAllAudios();\n        }\n        /**\n         * Play audios and videos directly here so they can benefit from\n         * being triggered by a click\n         */\n        audioAndVideoTags.current.forEach((a) => a.play());\n        imperativePlaying.current = true;\n        setPlaying(true);\n        playStart.current = frameRef.current;\n        emitter.dispatchPlay();\n    }, [\n        imperativePlaying,\n        isLastFrame,\n        audioContext,\n        setPlaying,\n        emitter,\n        seek,\n        audioAndVideoTags,\n    ]);\n    const pause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        if (imperativePlaying.current) {\n            imperativePlaying.current = false;\n            setPlaying(false);\n            emitter.dispatchPause();\n        }\n    }, [emitter, imperativePlaying, setPlaying]);\n    const pauseAndReturnToPlayStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        if (imperativePlaying.current) {\n            imperativePlaying.current = false;\n            if (config) {\n                setTimelinePosition((c) => ({\n                    ...c,\n                    [config.id]: playStart.current,\n                }));\n                setPlaying(false);\n                emitter.dispatchPause();\n            }\n        }\n    }, [config, emitter, imperativePlaying, setPlaying, setTimelinePosition]);\n    const videoId = video === null || video === void 0 ? void 0 : video.id;\n    const frameBack = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((frames) => {\n        if (!videoId) {\n            return null;\n        }\n        if (imperativePlaying.current) {\n            return;\n        }\n        setFrame((c) => {\n            var _a, _b;\n            const prev = (_b = (_a = c[videoId]) !== null && _a !== void 0 ? _a : window.remotion_initialFrame) !== null && _b !== void 0 ? _b : 0;\n            return {\n                ...c,\n                [videoId]: Math.max(0, prev - frames),\n            };\n        });\n    }, [imperativePlaying, setFrame, videoId]);\n    const frameForward = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((frames) => {\n        if (!videoId) {\n            return null;\n        }\n        if (imperativePlaying.current) {\n            return;\n        }\n        setFrame((c) => {\n            var _a, _b;\n            const prev = (_b = (_a = c[videoId]) !== null && _a !== void 0 ? _a : window.remotion_initialFrame) !== null && _b !== void 0 ? _b : 0;\n            return {\n                ...c,\n                [videoId]: Math.min(lastFrame, prev + frames),\n            };\n        });\n    }, [videoId, imperativePlaying, lastFrame, setFrame]);\n    const returnValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            frameBack,\n            frameForward,\n            isLastFrame,\n            emitter,\n            playing,\n            play,\n            pause,\n            seek,\n            isFirstFrame,\n            getCurrentFrame: () => frameRef.current,\n            isPlaying: () => imperativePlaying.current,\n            pauseAndReturnToPlayStart,\n            hasPlayed,\n        };\n    }, [\n        frameBack,\n        frameForward,\n        isLastFrame,\n        emitter,\n        playing,\n        play,\n        pause,\n        seek,\n        isFirstFrame,\n        pauseAndReturnToPlayStart,\n        imperativePlaying,\n        hasPlayed,\n    ]);\n    return returnValue;\n};\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst usePlayback = ({ loop, playbackRate, moveToBeginningWhenEnded, inFrame, outFrame, }) => {\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const { playing, pause, emitter } = usePlayer();\n    const setFrame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelineSetFrame();\n    // requestAnimationFrame() does not work if the tab is not active.\n    // This means that audio will keep playing even if it has ended.\n    // In that case, we use setTimeout() instead.\n    const isBackgroundedRef = useIsBackgrounded();\n    const frameRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(frame);\n    frameRef.current = frame;\n    const lastTimeUpdateEvent = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!config) {\n            return;\n        }\n        if (!playing) {\n            return;\n        }\n        let hasBeenStopped = false;\n        let reqAnimFrameCall = null;\n        const startedTime = performance.now();\n        let framesAdvanced = 0;\n        const cancelQueuedFrame = () => {\n            if (reqAnimFrameCall !== null) {\n                if (reqAnimFrameCall.type === 'raf') {\n                    cancelAnimationFrame(reqAnimFrameCall.id);\n                }\n                else {\n                    clearTimeout(reqAnimFrameCall.id);\n                }\n            }\n        };\n        const stop = () => {\n            hasBeenStopped = true;\n            cancelQueuedFrame();\n        };\n        const callback = () => {\n            const time = performance.now() - startedTime;\n            const actualLastFrame = outFrame !== null && outFrame !== void 0 ? outFrame : config.durationInFrames - 1;\n            const actualFirstFrame = inFrame !== null && inFrame !== void 0 ? inFrame : 0;\n            const { nextFrame, framesToAdvance, hasEnded } = calculateNextFrame({\n                time,\n                currentFrame: frameRef.current,\n                playbackSpeed: playbackRate,\n                fps: config.fps,\n                actualFirstFrame,\n                actualLastFrame,\n                framesAdvanced,\n                shouldLoop: loop,\n            });\n            framesAdvanced += framesToAdvance;\n            if (nextFrame !== frameRef.current &&\n                (!hasEnded || moveToBeginningWhenEnded)) {\n                setFrame((c) => ({ ...c, [config.id]: nextFrame }));\n            }\n            if (hasEnded) {\n                stop();\n                pause();\n                emitter.dispatchEnded();\n                return;\n            }\n            if (!hasBeenStopped) {\n                queueNextFrame();\n            }\n        };\n        const queueNextFrame = () => {\n            if (isBackgroundedRef.current) {\n                reqAnimFrameCall = {\n                    type: 'timeout',\n                    // Note: Most likely, this will not be 1000 / fps, but the browser will throttle it to ~1/sec.\n                    id: setTimeout(callback, 1000 / config.fps),\n                };\n            }\n            else {\n                reqAnimFrameCall = { type: 'raf', id: requestAnimationFrame(callback) };\n            }\n        };\n        queueNextFrame();\n        const onVisibilityChange = () => {\n            if (document.visibilityState === 'visible') {\n                return;\n            }\n            // If tab goes into the background, cancel requestAnimationFrame() and update immediately.\n            // , so the transition to setTimeout() can be fulfilled.\n            cancelQueuedFrame();\n            callback();\n        };\n        window.addEventListener('visibilitychange', onVisibilityChange);\n        return () => {\n            window.removeEventListener('visibilitychange', onVisibilityChange);\n            stop();\n        };\n    }, [\n        config,\n        loop,\n        pause,\n        playing,\n        setFrame,\n        emitter,\n        playbackRate,\n        inFrame,\n        outFrame,\n        moveToBeginningWhenEnded,\n        isBackgroundedRef,\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const interval = setInterval(() => {\n            if (lastTimeUpdateEvent.current === frameRef.current) {\n                return;\n            }\n            emitter.dispatchTimeUpdate({ frame: frameRef.current });\n            lastTimeUpdateEvent.current = frameRef.current;\n        }, 250);\n        return () => clearInterval(interval);\n    }, [emitter]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        emitter.dispatchFrameUpdate({ frame });\n    }, [emitter, frame]);\n};\n\nlet elementSizeHooks = [];\nconst updateAllElementsSizes = () => {\n    for (const listener of elementSizeHooks) {\n        listener();\n    }\n};\nconst useElementSize = (ref, options) => {\n    const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n        if (!ref.current) {\n            return null;\n        }\n        const rect = ref.current.getClientRects();\n        if (!rect[0]) {\n            return null;\n        }\n        return {\n            width: rect[0].width,\n            height: rect[0].height,\n            left: rect[0].x,\n            top: rect[0].y,\n            windowSize: {\n                height: window.innerHeight,\n                width: window.innerWidth,\n            },\n        };\n    });\n    const observer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        return new ResizeObserver((entries) => {\n            // The contentRect returns the width without any `scale()`'s being applied. The height is wrong\n            const { contentRect, target } = entries[0];\n            // The clientRect returns the size with `scale()` being applied.\n            const newSize = target.getClientRects();\n            if (!(newSize === null || newSize === void 0 ? void 0 : newSize[0])) {\n                setSize(null);\n                return;\n            }\n            const probableCssParentScale = contentRect.width === 0 ? 1 : newSize[0].width / contentRect.width;\n            const width = options.shouldApplyCssTransforms\n                ? newSize[0].width\n                : newSize[0].width * (1 / probableCssParentScale);\n            const height = options.shouldApplyCssTransforms\n                ? newSize[0].height\n                : newSize[0].height * (1 / probableCssParentScale);\n            setSize({\n                width,\n                height,\n                left: newSize[0].x,\n                top: newSize[0].y,\n                windowSize: {\n                    height: window.innerHeight,\n                    width: window.innerWidth,\n                },\n            });\n        });\n    }, [options.shouldApplyCssTransforms]);\n    const updateSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        if (!ref.current) {\n            return;\n        }\n        const rect = ref.current.getClientRects();\n        if (!rect[0]) {\n            setSize(null);\n            return;\n        }\n        setSize((prevState) => {\n            const isSame = prevState &&\n                prevState.width === rect[0].width &&\n                prevState.height === rect[0].height &&\n                prevState.left === rect[0].x &&\n                prevState.top === rect[0].y &&\n                prevState.windowSize.height === window.innerHeight &&\n                prevState.windowSize.width === window.innerWidth;\n            if (isSame) {\n                return prevState;\n            }\n            return {\n                width: rect[0].width,\n                height: rect[0].height,\n                left: rect[0].x,\n                top: rect[0].y,\n                windowSize: {\n                    height: window.innerHeight,\n                    width: window.innerWidth,\n                },\n            };\n        });\n    }, [ref]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!observer) {\n            return;\n        }\n        const { current } = ref;\n        if (ref.current) {\n            observer.observe(ref.current);\n        }\n        return () => {\n            if (current) {\n                observer.unobserve(current);\n            }\n        };\n    }, [observer, ref, updateSize]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!options.triggerOnWindowResize) {\n            return;\n        }\n        window.addEventListener('resize', updateSize);\n        return () => {\n            window.removeEventListener('resize', updateSize);\n        };\n    }, [options.triggerOnWindowResize, updateSize]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        elementSizeHooks.push(updateSize);\n        return () => {\n            elementSizeHooks = elementSizeHooks.filter((e) => e !== updateSize);\n        };\n    }, [updateSize]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        if (!size) {\n            return null;\n        }\n        return { ...size, refresh: updateSize };\n    }, [size, updateSize]);\n};\n\nconst PLAYER_CSS_CLASSNAME = '__remotion-player';\n\nconst errorStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    height: '100%',\n    width: '100%',\n};\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { hasError: null };\n    }\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: error };\n    }\n    componentDidCatch(error) {\n        this.props.onError(error);\n    }\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: errorStyle, children: this.props.errorFallback({\n                    error: this.state.hasError,\n                }) }));\n        }\n        return this.props.children;\n    }\n}\n\nconst formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds - minutes * 60);\n    return `${String(minutes)}:${String(seconds).padStart(2, '0')}`;\n};\n\nconst ICON_SIZE = 25;\nconst fullscreenIconSize = 16;\nconst PlayIcon = () => {\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { width: ICON_SIZE, height: ICON_SIZE, viewBox: \"0 0 25 25\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M8 6.375C7.40904 8.17576 7.06921 10.2486 7.01438 12.3871C6.95955 14.5255 7.19163 16.6547 7.6875 18.5625C9.95364 18.2995 12.116 17.6164 14.009 16.5655C15.902 15.5147 17.4755 14.124 18.6088 12.5C17.5158 10.8949 15.9949 9.51103 14.1585 8.45082C12.3222 7.3906 10.2174 6.68116 8 6.375Z\", fill: \"white\", stroke: \"white\", strokeWidth: \"6.25\", strokeLinejoin: \"round\" }) }));\n};\nconst PauseIcon = () => {\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"svg\", { viewBox: \"0 0 100 100\", width: ICON_SIZE, height: ICON_SIZE, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"rect\", { x: \"25\", y: \"20\", width: \"20\", height: \"60\", fill: \"#fff\", ry: \"5\", rx: \"5\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"rect\", { x: \"55\", y: \"20\", width: \"20\", height: \"60\", fill: \"#fff\", ry: \"5\", rx: \"5\" })] }));\n};\nconst FullscreenIcon = ({ isFullscreen, }) => {\n    const strokeWidth = 6;\n    const viewSize = 32;\n    const out = isFullscreen ? 0 : strokeWidth / 2;\n    const middleInset = isFullscreen ? strokeWidth * 1.6 : strokeWidth / 2;\n    const inset = isFullscreen ? strokeWidth * 1.6 : strokeWidth * 2;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"svg\", { viewBox: `0 0 ${viewSize} ${viewSize}`, height: fullscreenIconSize, width: fullscreenIconSize, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: `\n\t\t\t\tM ${out} ${inset}\n\t\t\t\tL ${middleInset} ${middleInset}\n\t\t\t\tL ${inset} ${out}\n\t\t\t\t`, stroke: \"#fff\", strokeWidth: strokeWidth, fill: \"none\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: `\n\t\t\t\tM ${viewSize - out} ${inset}\n\t\t\t\tL ${viewSize - middleInset} ${middleInset}\n\t\t\t\tL ${viewSize - inset} ${out}\n\t\t\t\t`, stroke: \"#fff\", strokeWidth: strokeWidth, fill: \"none\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: `\n\t\t\t\tM ${out} ${viewSize - inset}\n\t\t\t\tL ${middleInset} ${viewSize - middleInset}\n\t\t\t\tL ${inset} ${viewSize - out}\n\t\t\t\t`, stroke: \"#fff\", strokeWidth: strokeWidth, fill: \"none\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: `\n\t\t\t\tM ${viewSize - out} ${viewSize - inset}\n\t\t\t\tL ${viewSize - middleInset} ${viewSize - middleInset}\n\t\t\t\tL ${viewSize - inset} ${viewSize - out}\n\t\t\t\t`, stroke: \"#fff\", strokeWidth: strokeWidth, fill: \"none\" })] }));\n};\nconst VolumeOffIcon = () => {\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { width: ICON_SIZE, height: ICON_SIZE, viewBox: \"0 0 24 24\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M3.63 3.63a.996.996 0 000 1.41L7.29 8.7 7 9H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71v-4.17l4.18 4.18c-.49.37-1.02.68-1.6.91-.36.15-.58.53-.58.92 0 .72.73 1.18 1.39.91.8-.33 1.55-.77 2.22-1.31l1.34 1.34a.996.996 0 101.41-1.41L5.05 3.63c-.39-.39-1.02-.39-1.42 0zM19 12c0 .82-.15 1.61-.41 2.34l1.53 1.53c.56-1.17.88-2.48.88-3.87 0-3.83-2.4-7.11-5.78-8.4-.59-.23-1.22.23-1.22.86v.19c0 .38.25.71.61.85C17.18 6.54 19 9.06 19 12zm-8.71-6.29l-.17.17L12 7.76V6.41c0-.89-1.08-1.33-1.71-.7zM16.5 12A4.5 4.5 0 0014 7.97v1.79l2.48 2.48c.01-.08.02-.16.02-.24z\", fill: \"#fff\" }) }));\n};\nconst VolumeOnIcon = () => {\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { width: ICON_SIZE, height: ICON_SIZE, viewBox: \"0 0 24 24\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M3 10v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71V6.41c0-.89-1.08-1.34-1.71-.71L7 9H4c-.55 0-1 .45-1 1zm13.5 2A4.5 4.5 0 0014 7.97v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 4.45v.2c0 .38.25.71.6.85C17.18 6.53 19 9.06 19 12s-1.82 5.47-4.4 6.5c-.36.14-.6.47-.6.85v.2c0 .63.63 1.07 1.21.85C18.6 19.11 21 15.84 21 12s-2.4-7.11-5.79-8.4c-.58-.23-1.21.22-1.21.85z\", fill: \"#fff\" }) }));\n};\n\nconst BAR_HEIGHT$1 = 5;\nconst KNOB_SIZE$1 = 12;\nconst VOLUME_SLIDER_WIDTH = 100;\nconst MediaVolumeSlider = ({ displayVerticalVolumeSlider }) => {\n    const [mediaMuted, setMediaMuted] = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useMediaMutedState();\n    const [mediaVolume, setMediaVolume] = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useMediaVolumeState();\n    const [focused, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const parentDivRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const hover = useHoverState(parentDivRef);\n    // Need to import it from React to fix React 17 ESM support.\n    const randomId = \n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    typeof react__WEBPACK_IMPORTED_MODULE_0__.useId === 'undefined' ? 'volume-slider' : react__WEBPACK_IMPORTED_MODULE_0__.useId();\n    const [randomClass] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => `__remotion-volume-slider-${(0,remotion__WEBPACK_IMPORTED_MODULE_1__.random)(randomId)}`.replace('.', ''));\n    const isMutedOrZero = mediaMuted || mediaVolume === 0;\n    const onVolumeChange = (e) => {\n        setMediaVolume(parseFloat(e.target.value));\n    };\n    const onBlur = () => {\n        setTimeout(() => {\n            // We need a small delay to check which element was focused next,\n            // and if it wasn't the volume slider, we hide it\n            if (document.activeElement !== inputRef.current) {\n                setFocused(false);\n            }\n        }, 10);\n    };\n    const onClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        if (mediaVolume === 0) {\n            setMediaVolume(1);\n            setMediaMuted(false);\n            return;\n        }\n        setMediaMuted((mute) => !mute);\n    }, [mediaVolume, setMediaMuted, setMediaVolume]);\n    const parentDivStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            display: 'inline-flex',\n            background: 'none',\n            border: 'none',\n            justifyContent: 'center',\n            alignItems: 'center',\n            touchAction: 'none',\n            ...(displayVerticalVolumeSlider && { position: 'relative' }),\n        };\n    }, [displayVerticalVolumeSlider]);\n    const volumeContainer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            display: 'inline',\n            width: ICON_SIZE,\n            height: ICON_SIZE,\n            cursor: 'pointer',\n            appearance: 'none',\n            background: 'none',\n            border: 'none',\n            padding: 0,\n        };\n    }, []);\n    const inputStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const commonStyle = {\n            WebkitAppearance: 'none',\n            backgroundColor: 'rgba(255, 255, 255, 0.5)',\n            borderRadius: BAR_HEIGHT$1 / 2,\n            cursor: 'pointer',\n            height: BAR_HEIGHT$1,\n            width: VOLUME_SLIDER_WIDTH,\n            backgroundImage: `linear-gradient(\n\t\t\t\tto right,\n\t\t\t\twhite ${mediaVolume * 100}%, rgba(255, 255, 255, 0) ${mediaVolume * 100}%\n\t\t\t)`,\n        };\n        if (displayVerticalVolumeSlider) {\n            return {\n                ...commonStyle,\n                transform: `rotate(-90deg)`,\n                position: 'absolute',\n                bottom: ICON_SIZE + VOLUME_SLIDER_WIDTH / 2 + 5,\n            };\n        }\n        return {\n            ...commonStyle,\n            marginLeft: 5,\n        };\n    }, [displayVerticalVolumeSlider, mediaVolume]);\n    const sliderStyle = `\n\t.${randomClass}::-webkit-slider-thumb {\n\t\t-webkit-appearance: none;\n\t\tbackground-color: white;\n\t\tborder-radius: ${KNOB_SIZE$1 / 2}px;\n\t\tbox-shadow: 0 0 2px black;\n\t\theight: ${KNOB_SIZE$1}px;\n\t\twidth: ${KNOB_SIZE$1}px;\n\t}\n\n\t.${randomClass}::-moz-range-thumb {\n\t\t-webkit-appearance: none;\n\t\tbackground-color: white;\n\t\tborder-radius: ${KNOB_SIZE$1 / 2}px;\n\t\tbox-shadow: 0 0 2px black;\n\t\theight: ${KNOB_SIZE$1}px;\n\t\twidth: ${KNOB_SIZE$1}px;\n\t}\n`;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { ref: parentDivRef, style: parentDivStyle, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"style\", { \n                // eslint-disable-next-line react/no-danger\n                dangerouslySetInnerHTML: {\n                    __html: sliderStyle,\n                } }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", { \"aria-label\": isMutedOrZero ? 'Unmute sound' : 'Mute sound', title: isMutedOrZero ? 'Unmute sound' : 'Mute sound', onClick: onClick, onBlur: onBlur, onFocus: () => setFocused(true), style: volumeContainer, type: \"button\", children: isMutedOrZero ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(VolumeOffIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(VolumeOnIcon, {}) }), (focused || hover) && !mediaMuted && !remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.isIosSafari() ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"input\", { ref: inputRef, \"aria-label\": \"Change volume\", className: randomClass, max: 1, min: 0, onBlur: () => setFocused(false), onChange: onVolumeChange, step: 0.01, type: \"range\", value: mediaVolume, style: inputStyle })) : null] }));\n};\n\n// hook to hide a popup/modal when clicked outside\nfunction useComponentVisible(initialIsVisible) {\n    const [isComponentVisible, setIsComponentVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialIsVisible);\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const handleClickOutside = (event) => {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setIsComponentVisible(false);\n            }\n        };\n        document.addEventListener('pointerup', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('pointerup', handleClickOutside, true);\n        };\n    }, []);\n    return { ref, isComponentVisible, setIsComponentVisible };\n}\n\n// To align\nconst BOTTOM = 35;\n// Arbitrary to clamp the height of the popup\nconst THRESHOLD = 70;\nconst rateDiv = {\n    height: 30,\n    paddingRight: 15,\n    paddingLeft: 12,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n};\nconst checkmarkContainer = {\n    width: 22,\n    display: 'flex',\n    alignItems: 'center',\n};\nconst checkmarkStyle = {\n    width: 14,\n    height: 14,\n    color: 'black',\n};\nconst Checkmark = () => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 512 512\", style: checkmarkStyle, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { fill: \"currentColor\", d: \"M435.848 83.466L172.804 346.51l-96.652-96.652c-4.686-4.686-12.284-4.686-16.971 0l-28.284 28.284c-4.686 4.686-4.686 12.284 0 16.971l133.421 133.421c4.686 4.686 12.284 4.686 16.971 0l299.813-299.813c4.686-4.686 4.686-12.284 0-16.971l-28.284-28.284c-4.686-4.686-12.284-4.686-16.97 0z\" }) }));\nconst PlaybackrateOption = ({ rate, onSelect, selectedRate, keyboardSelectedRate }) => {\n    const onClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        onSelect(rate);\n    }, [onSelect, rate]);\n    const [hovered, setHovered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const onMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        setHovered(true);\n    }, []);\n    const onMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        setHovered(false);\n    }, []);\n    const actualStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            ...rateDiv,\n            backgroundColor: hovered || keyboardSelectedRate === rate ? '#eee' : 'transparent',\n        };\n    }, [hovered, keyboardSelectedRate, rate]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, tabIndex: 0, style: actualStyle, onClick: onClick, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: checkmarkContainer, children: rate === selectedRate ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Checkmark, {}) : null }), rate.toFixed(1), \"x\"] }, rate));\n};\nconst PlaybackPopup = ({ setIsComponentVisible, playbackRates, canvasSize }) => {\n    const { setPlaybackRate, playbackRate } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext);\n    const [keyboardSelectedRate, setKeyboardSelectedRate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(playbackRate);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const listener = (e) => {\n            e.preventDefault();\n            if (e.key === 'ArrowUp') {\n                const currentIndex = playbackRates.findIndex((rate) => rate === keyboardSelectedRate);\n                if (currentIndex === 0) {\n                    return;\n                }\n                if (currentIndex === -1) {\n                    setKeyboardSelectedRate(playbackRates[0]);\n                }\n                else {\n                    setKeyboardSelectedRate(playbackRates[currentIndex - 1]);\n                }\n            }\n            else if (e.key === 'ArrowDown') {\n                const currentIndex = playbackRates.findIndex((rate) => rate === keyboardSelectedRate);\n                if (currentIndex === playbackRates.length - 1) {\n                    return;\n                }\n                if (currentIndex === -1) {\n                    setKeyboardSelectedRate(playbackRates[playbackRates.length - 1]);\n                }\n                else {\n                    setKeyboardSelectedRate(playbackRates[currentIndex + 1]);\n                }\n            }\n            else if (e.key === 'Enter') {\n                setPlaybackRate(keyboardSelectedRate);\n                setIsComponentVisible(false);\n            }\n        };\n        window.addEventListener('keydown', listener);\n        return () => {\n            window.removeEventListener('keydown', listener);\n        };\n    }, [\n        playbackRates,\n        keyboardSelectedRate,\n        setPlaybackRate,\n        setIsComponentVisible,\n    ]);\n    const onSelect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((rate) => {\n        setPlaybackRate(rate);\n        setIsComponentVisible(false);\n    }, [setIsComponentVisible, setPlaybackRate]);\n    const playbackPopup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            position: 'absolute',\n            right: 0,\n            width: 125,\n            maxHeight: canvasSize.height - THRESHOLD - BOTTOM,\n            bottom: 35,\n            background: '#fff',\n            borderRadius: 4,\n            overflow: 'auto',\n            color: 'black',\n            textAlign: 'left',\n        };\n    }, [canvasSize.height]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: playbackPopup, children: playbackRates.map((rate) => {\n            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlaybackrateOption, { selectedRate: playbackRate, onSelect: onSelect, rate: rate, keyboardSelectedRate: keyboardSelectedRate }, rate));\n        }) }));\n};\nconst label = {\n    fontSize: 13,\n    fontWeight: 'bold',\n    color: 'white',\n    border: '2px solid white',\n    borderRadius: 20,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 2,\n    paddingBottom: 2,\n};\nconst playerButtonStyle = {\n    appearance: 'none',\n    backgroundColor: 'transparent',\n    border: 'none',\n    cursor: 'pointer',\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 6,\n    paddingBottom: 6,\n    height: 37,\n    display: 'inline-flex',\n    marginBottom: 0,\n    marginTop: 0,\n    alignItems: 'center',\n};\nconst button = {\n    ...playerButtonStyle,\n    position: 'relative',\n};\nconst PlaybackrateControl = ({ playbackRates, canvasSize }) => {\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    const { playbackRate } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext);\n    const onClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setIsComponentVisible(!isComponentVisible);\n    }, [isComponentVisible, setIsComponentVisible]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { ref: ref, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"button\", { type: \"button\", \"aria-label\": \"Change playback rate\", style: button, onClick: onClick, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style: label, children: [playbackRate, \"x\"] }), isComponentVisible && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlaybackPopup, { canvasSize: canvasSize, playbackRates: playbackRates, setIsComponentVisible: setIsComponentVisible }))] }) }));\n};\n\nconst getFrameFromX = (clientX, durationInFrames, width) => {\n    var _a;\n    const pos = clientX;\n    const frame = Math.round((0,remotion__WEBPACK_IMPORTED_MODULE_1__.interpolate)(pos, [0, width], [0, (_a = durationInFrames - 1) !== null && _a !== void 0 ? _a : 0], {\n        extrapolateLeft: 'clamp',\n        extrapolateRight: 'clamp',\n    }));\n    return frame;\n};\nconst BAR_HEIGHT = 5;\nconst KNOB_SIZE = 12;\nconst VERTICAL_PADDING = 4;\nconst containerStyle$1 = {\n    userSelect: 'none',\n    paddingTop: VERTICAL_PADDING,\n    paddingBottom: VERTICAL_PADDING,\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    position: 'relative',\n    touchAction: 'none',\n};\nconst barBackground = {\n    height: BAR_HEIGHT,\n    backgroundColor: 'rgba(255, 255, 255, 0.25)',\n    width: '100%',\n    borderRadius: BAR_HEIGHT / 2,\n};\nconst findBodyInWhichDivIsLocated = (div) => {\n    let current = div;\n    while (current.parentElement) {\n        current = current.parentElement;\n    }\n    return current;\n};\nconst PlayerSeekBar = ({ durationInFrames, onSeekEnd, onSeekStart, inFrame, outFrame }) => {\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const barHovered = useHoverState(containerRef);\n    const size = useElementSize(containerRef, {\n        triggerOnWindowResize: true,\n        shouldApplyCssTransforms: true,\n    });\n    const { seek, play, pause, playing } = usePlayer();\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const [dragging, setDragging] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        dragging: false,\n    });\n    const onPointerDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        if (!size) {\n            throw new Error('Player has no size');\n        }\n        const _frame = getFrameFromX(e.clientX - size.left, durationInFrames, size.width);\n        pause();\n        seek(_frame);\n        setDragging({\n            dragging: true,\n            wasPlaying: playing,\n        });\n        onSeekStart();\n    }, [size, durationInFrames, pause, seek, playing, onSeekStart]);\n    const onPointerMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        var _a;\n        if (!size) {\n            throw new Error('Player has no size');\n        }\n        if (!dragging.dragging) {\n            return;\n        }\n        const _frame = getFrameFromX(e.clientX - ((_a = size === null || size === void 0 ? void 0 : size.left) !== null && _a !== void 0 ? _a : 0), durationInFrames, size.width);\n        seek(_frame);\n    }, [dragging.dragging, durationInFrames, seek, size]);\n    const onPointerUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        setDragging({\n            dragging: false,\n        });\n        if (!dragging.dragging) {\n            return;\n        }\n        if (dragging.wasPlaying) {\n            play();\n        }\n        else {\n            pause();\n        }\n        onSeekEnd();\n    }, [dragging, onSeekEnd, pause, play]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!dragging.dragging) {\n            return;\n        }\n        const body = findBodyInWhichDivIsLocated(containerRef.current);\n        body.addEventListener('pointermove', onPointerMove);\n        body.addEventListener('pointerup', onPointerUp);\n        return () => {\n            body.removeEventListener('pointermove', onPointerMove);\n            body.removeEventListener('pointerup', onPointerUp);\n        };\n    }, [dragging.dragging, onPointerMove, onPointerUp]);\n    const knobStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        var _a;\n        return {\n            height: KNOB_SIZE,\n            width: KNOB_SIZE,\n            borderRadius: KNOB_SIZE / 2,\n            position: 'absolute',\n            top: VERTICAL_PADDING - KNOB_SIZE / 2 + 5 / 2,\n            backgroundColor: 'white',\n            left: Math.max(0, (frame / Math.max(1, durationInFrames - 1)) * ((_a = size === null || size === void 0 ? void 0 : size.width) !== null && _a !== void 0 ? _a : 0) -\n                KNOB_SIZE / 2),\n            boxShadow: '0 0 2px black',\n            opacity: Number(barHovered),\n        };\n    }, [barHovered, durationInFrames, frame, size]);\n    const fillStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            height: BAR_HEIGHT,\n            backgroundColor: 'rgba(255, 255, 255, 1)',\n            width: ((frame - (inFrame !== null && inFrame !== void 0 ? inFrame : 0)) / (durationInFrames - 1)) * 100 + '%',\n            marginLeft: ((inFrame !== null && inFrame !== void 0 ? inFrame : 0) / (durationInFrames - 1)) * 100 + '%',\n            borderRadius: BAR_HEIGHT / 2,\n        };\n    }, [durationInFrames, frame, inFrame]);\n    const active = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            height: BAR_HEIGHT,\n            backgroundColor: 'rgba(255, 255, 255, 0.25)',\n            width: (((outFrame !== null && outFrame !== void 0 ? outFrame : durationInFrames - 1) - (inFrame !== null && inFrame !== void 0 ? inFrame : 0)) /\n                (durationInFrames - 1)) *\n                100 +\n                '%',\n            marginLeft: ((inFrame !== null && inFrame !== void 0 ? inFrame : 0) / (durationInFrames - 1)) * 100 + '%',\n            borderRadius: BAR_HEIGHT / 2,\n            position: 'absolute',\n        };\n    }, [durationInFrames, inFrame, outFrame]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { ref: containerRef, onPointerDown: onPointerDown, style: containerStyle$1, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style: barBackground, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: active }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: fillStyle })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: knobStyle })] }));\n};\n\nconst X_SPACER = 10;\nconst X_PADDING = 12;\nconst useVideoControlsResize = ({ allowFullscreen: allowFullScreen, playerWidth, }) => {\n    const resizeInfo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const playPauseIconSize = ICON_SIZE;\n        const volumeIconSize = ICON_SIZE;\n        const _fullscreenIconSize = allowFullScreen ? fullscreenIconSize : 0;\n        const elementsSize = volumeIconSize +\n            playPauseIconSize +\n            _fullscreenIconSize +\n            X_PADDING * 2 +\n            X_SPACER * 2;\n        const maxTimeLabelWidth = playerWidth - elementsSize;\n        const maxTimeLabelWidthWithoutNegativeValue = Math.max(maxTimeLabelWidth, 0);\n        const availableTimeLabelWidthIfVolumeOpen = maxTimeLabelWidthWithoutNegativeValue - VOLUME_SLIDER_WIDTH;\n        // If max label width is lower than the volume width\n        // then it means we need to take it's width as the max label width\n        // otherwise we took the available width when volume open\n        const computedLabelWidth = availableTimeLabelWidthIfVolumeOpen < VOLUME_SLIDER_WIDTH\n            ? maxTimeLabelWidthWithoutNegativeValue\n            : availableTimeLabelWidthIfVolumeOpen;\n        const minWidthForHorizontalDisplay = computedLabelWidth + elementsSize + VOLUME_SLIDER_WIDTH;\n        const displayVerticalVolumeSlider = playerWidth < minWidthForHorizontalDisplay;\n        return {\n            maxTimeLabelWidth: maxTimeLabelWidthWithoutNegativeValue === 0\n                ? null\n                : maxTimeLabelWidthWithoutNegativeValue,\n            displayVerticalVolumeSlider,\n        };\n    }, [allowFullScreen, playerWidth]);\n    return resizeInfo;\n};\n\nconst gradientSteps = [\n    0, 0.013, 0.049, 0.104, 0.175, 0.259, 0.352, 0.45, 0.55, 0.648, 0.741, 0.825,\n    0.896, 0.951, 0.987,\n];\nconst gradientOpacities = [\n    0, 8.1, 15.5, 22.5, 29, 35.3, 41.2, 47.1, 52.9, 58.8, 64.7, 71, 77.5, 84.5,\n    91.9,\n];\nconst globalGradientOpacity = 1 / 0.7;\nconst containerStyle = {\n    boxSizing: 'border-box',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    paddingTop: 40,\n    paddingBottom: 10,\n    backgroundImage: `linear-gradient(to bottom,${gradientSteps\n        .map((g, i) => {\n        return `hsla(0, 0%, 0%, ${g}) ${gradientOpacities[i] * globalGradientOpacity}%`;\n    })\n        .join(', ')}, hsl(0, 0%, 0%) 100%)`,\n    backgroundSize: 'auto 145px',\n    display: 'flex',\n    paddingRight: X_PADDING,\n    paddingLeft: X_PADDING,\n    flexDirection: 'column',\n    transition: 'opacity 0.3s',\n};\nconst controlsRow = {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    userSelect: 'none',\n};\nconst leftPartStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    userSelect: 'none',\n    alignItems: 'center',\n};\nconst xSpacer = {\n    width: 12,\n};\nconst ySpacer = {\n    height: 8,\n};\nconst flex1 = {\n    flex: 1,\n};\nconst fullscreen = {};\nconst PlayPauseButton = ({ playing }) => playing ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PauseIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlayIcon, {});\nconst Controls = ({ durationInFrames, isFullscreen, fps, player, showVolumeControls, onFullscreenButtonClick, allowFullscreen, onExitFullscreenButtonClick, spaceKeyToPlayOrPause, onSeekEnd, onSeekStart, inFrame, outFrame, initiallyShowControls, canvasSize, renderPlayPauseButton, renderFullscreenButton, alwaysShowControls, showPlaybackRateControl, containerRef, }) => {\n    var _a;\n    const playButtonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const [supportsFullscreen, setSupportsFullscreen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const hovered = useHoverState(containerRef);\n    const { maxTimeLabelWidth, displayVerticalVolumeSlider } = useVideoControlsResize({\n        allowFullscreen,\n        playerWidth: (_a = canvasSize === null || canvasSize === void 0 ? void 0 : canvasSize.width) !== null && _a !== void 0 ? _a : 0,\n    });\n    const [shouldShowInitially, setInitiallyShowControls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n        if (typeof initiallyShowControls === 'boolean') {\n            return initiallyShowControls;\n        }\n        if (typeof initiallyShowControls === 'number') {\n            if (initiallyShowControls % 1 !== 0) {\n                throw new Error('initiallyShowControls must be an integer or a boolean');\n            }\n            if (Number.isNaN(initiallyShowControls)) {\n                throw new Error('initiallyShowControls must not be NaN');\n            }\n            if (!Number.isFinite(initiallyShowControls)) {\n                throw new Error('initiallyShowControls must be finite');\n            }\n            if (initiallyShowControls <= 0) {\n                throw new Error('initiallyShowControls must be a positive integer');\n            }\n            return initiallyShowControls;\n        }\n        throw new TypeError('initiallyShowControls must be a number or a boolean');\n    });\n    const containerCss = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        // Hide if playing and mouse outside\n        const shouldShow = hovered || !player.playing || shouldShowInitially || alwaysShowControls;\n        return {\n            ...containerStyle,\n            opacity: Number(shouldShow),\n        };\n    }, [hovered, shouldShowInitially, player.playing, alwaysShowControls]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (playButtonRef.current && spaceKeyToPlayOrPause) {\n            // This switches focus to play button when player.playing flag changes\n            playButtonRef.current.focus({\n                preventScroll: true,\n            });\n        }\n    }, [player.playing, spaceKeyToPlayOrPause]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        var _a;\n        // Must be handled client-side to avoid SSR hydration mismatch\n        setSupportsFullscreen((_a = (typeof document !== 'undefined' &&\n            (document.fullscreenEnabled || document.webkitFullscreenEnabled))) !== null && _a !== void 0 ? _a : false);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (shouldShowInitially === false) {\n            return;\n        }\n        const time = shouldShowInitially === true ? 2000 : shouldShowInitially;\n        const timeout = setTimeout(() => {\n            setInitiallyShowControls(false);\n        }, time);\n        return () => {\n            clearInterval(timeout);\n        };\n    }, [shouldShowInitially]);\n    const timeLabel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            color: 'white',\n            fontFamily: 'sans-serif',\n            fontSize: 14,\n            maxWidth: maxTimeLabelWidth === null ? undefined : maxTimeLabelWidth,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        };\n    }, [maxTimeLabelWidth]);\n    const playbackRates = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        if (showPlaybackRateControl === true) {\n            return [0.5, 0.8, 1, 1.2, 1.5, 1.8, 2, 2.5, 3];\n        }\n        if (Array.isArray(showPlaybackRateControl)) {\n            for (const rate of showPlaybackRateControl) {\n                if (typeof rate !== 'number') {\n                    throw new Error('Every item in showPlaybackRateControl must be a number');\n                }\n                if (rate <= 0) {\n                    throw new Error('Every item in showPlaybackRateControl must be positive');\n                }\n            }\n            return showPlaybackRateControl;\n        }\n        return null;\n    }, [showPlaybackRateControl]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style: containerCss, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style: controlsRow, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style: leftPartStyle, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", { ref: playButtonRef, type: \"button\", style: playerButtonStyle, onClick: player.playing ? player.pause : player.play, \"aria-label\": player.playing ? 'Pause video' : 'Play video', title: player.playing ? 'Pause video' : 'Play video', children: renderPlayPauseButton === null ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlayPauseButton, { playing: player.playing })) : (renderPlayPauseButton({ playing: player.playing })) }), showVolumeControls ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: xSpacer }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MediaVolumeSlider, { displayVerticalVolumeSlider: displayVerticalVolumeSlider })] })) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: xSpacer }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style: timeLabel, children: [formatTime(frame / fps), \" / \", formatTime(durationInFrames / fps)] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: xSpacer })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: flex1 }), playbackRates && canvasSize && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlaybackrateControl, { canvasSize: canvasSize, playbackRates: playbackRates })), playbackRates && supportsFullscreen && allowFullscreen ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: xSpacer })) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: fullscreen, children: supportsFullscreen && allowFullscreen ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\", { type: \"button\", \"aria-label\": isFullscreen ? 'Exit fullscreen' : 'Enter Fullscreen', title: isFullscreen ? 'Exit fullscreen' : 'Enter Fullscreen', style: playerButtonStyle, onClick: isFullscreen\n                                ? onExitFullscreenButtonClick\n                                : onFullscreenButtonClick, children: renderFullscreenButton === null ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(FullscreenIcon, { isFullscreen: isFullscreen })) : (renderFullscreenButton({ isFullscreen })) })) : null })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: ySpacer }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlayerSeekBar, { onSeekEnd: onSeekEnd, onSeekStart: onSeekStart, durationInFrames: durationInFrames, inFrame: inFrame, outFrame: outFrame })] }));\n};\n\nconst IS_NODE = typeof document === 'undefined';\n\nconst cancellablePromise = (promise) => {\n    let isCanceled = false;\n    const wrappedPromise = new Promise((resolve, reject) => {\n        promise\n            .then((value) => {\n            if (isCanceled) {\n                reject({ isCanceled, value });\n                return;\n            }\n            resolve(value);\n        })\n            .catch((error) => {\n            reject({ isCanceled, error });\n        });\n    });\n    return {\n        promise: wrappedPromise,\n        cancel: () => {\n            isCanceled = true;\n        },\n    };\n};\n\n/* eslint-disable no-promise-executor-return */\nconst delay = (n) => new Promise((resolve) => setTimeout(resolve, n));\n\nconst useCancellablePromises = () => {\n    const pendingPromises = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const appendPendingPromise = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((promise) => {\n        pendingPromises.current = [...pendingPromises.current, promise];\n    }, []);\n    const removePendingPromise = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((promise) => {\n        pendingPromises.current = pendingPromises.current.filter((p) => p !== promise);\n    }, []);\n    const clearPendingPromises = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => pendingPromises.current.map((p) => p.cancel()), []);\n    const api = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n        appendPendingPromise,\n        removePendingPromise,\n        clearPendingPromises,\n    }), [appendPendingPromise, clearPendingPromises, removePendingPromise]);\n    return api;\n};\n\nconst useClickPreventionOnDoubleClick = (onClick, onDoubleClick, doubleClickToFullscreen) => {\n    const api = useCancellablePromises();\n    const handleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (e) => {\n        api.clearPendingPromises();\n        const waitForClick = cancellablePromise(delay(200));\n        api.appendPendingPromise(waitForClick);\n        try {\n            await waitForClick.promise;\n            api.removePendingPromise(waitForClick);\n            onClick(e);\n        }\n        catch (errorInfo) {\n            const info = errorInfo;\n            api.removePendingPromise(waitForClick);\n            if (!info.isCanceled) {\n                throw info.error;\n            }\n        }\n    }, [api, onClick]);\n    const handleDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        api.clearPendingPromises();\n        onDoubleClick();\n    }, [api, onDoubleClick]);\n    const returnValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        if (!doubleClickToFullscreen) {\n            return [onClick, onDoubleClick];\n        }\n        return [handleClick, handleDoubleClick];\n    }, [\n        doubleClickToFullscreen,\n        handleClick,\n        handleDoubleClick,\n        onClick,\n        onDoubleClick,\n    ]);\n    return returnValue;\n};\n\nconst reactVersion$1 = react__WEBPACK_IMPORTED_MODULE_0__.version.split('.')[0];\nif (reactVersion$1 === '0') {\n    throw new Error(`Version ${reactVersion$1} of \"react\" is not supported by Remotion`);\n}\nconst doesReactVersionSupportSuspense$1 = parseInt(reactVersion$1, 10) >= 18;\nconst PlayerUI = ({ controls, style, loop, autoPlay, allowFullscreen, inputProps, clickToPlay, showVolumeControls, doubleClickToFullscreen, spaceKeyToPlayOrPause, errorFallback, playbackRate, renderLoading, renderPoster, className, moveToBeginningWhenEnded, showPosterWhenUnplayed, showPosterWhenEnded, showPosterWhenPaused, inFrame, outFrame, initiallyShowControls, renderFullscreen: renderFullscreenButton, renderPlayPauseButton, alwaysShowControls, showPlaybackRateControl, }, ref) => {\n    var _a, _b, _c;\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const video = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useVideo();\n    const container = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const canvasSize = useElementSize(container, {\n        triggerOnWindowResize: false,\n        shouldApplyCssTransforms: false,\n    });\n    const [hasPausedToResume, setHasPausedToResume] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [shouldAutoplay, setShouldAutoPlay] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(autoPlay);\n    const [isFullscreen, setIsFullscreen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => false);\n    const [seeking, setSeeking] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    usePlayback({\n        loop,\n        playbackRate,\n        moveToBeginningWhenEnded,\n        inFrame,\n        outFrame,\n    });\n    const player = usePlayer();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (hasPausedToResume && !player.playing) {\n            setHasPausedToResume(false);\n            player.play();\n        }\n    }, [hasPausedToResume, player]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const { current } = container;\n        if (!current) {\n            return;\n        }\n        const onFullscreenChange = () => {\n            setIsFullscreen(document.fullscreenElement === current ||\n                document.webkitFullscreenElement === current);\n        };\n        document.addEventListener('fullscreenchange', onFullscreenChange);\n        document.addEventListener('webkitfullscreenchange', onFullscreenChange);\n        return () => {\n            document.removeEventListener('fullscreenchange', onFullscreenChange);\n            document.removeEventListener('webkitfullscreenchange', onFullscreenChange);\n        };\n    }, []);\n    const toggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        if (player.isPlaying()) {\n            player.pause();\n        }\n        else {\n            player.play(e);\n        }\n    }, [player]);\n    const requestFullscreen = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        if (!allowFullscreen) {\n            throw new Error('allowFullscreen is false');\n        }\n        const supportsFullScreen = document.fullscreenEnabled || document.webkitFullscreenEnabled;\n        if (!supportsFullScreen) {\n            throw new Error('Browser doesnt support fullscreen');\n        }\n        if (!container.current) {\n            throw new Error('No player ref found');\n        }\n        if (container.current.webkitRequestFullScreen) {\n            container.current.webkitRequestFullScreen();\n        }\n        else {\n            container.current.requestFullscreen();\n        }\n    }, [allowFullscreen]);\n    const exitFullscreen = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n        else {\n            document.exitFullscreen();\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const { current } = container;\n        if (!current) {\n            return;\n        }\n        const fullscreenChange = () => {\n            var _a;\n            const element = (_a = document.webkitFullscreenElement) !== null && _a !== void 0 ? _a : document.fullscreenElement;\n            if (element && element === container.current) {\n                player.emitter.dispatchFullscreenChange({\n                    isFullscreen: true,\n                });\n            }\n            else {\n                player.emitter.dispatchFullscreenChange({\n                    isFullscreen: false,\n                });\n            }\n        };\n        current.addEventListener('webkitfullscreenchange', fullscreenChange);\n        current.addEventListener('fullscreenchange', fullscreenChange);\n        return () => {\n            current.removeEventListener('webkitfullscreenchange', fullscreenChange);\n            current.removeEventListener('fullscreenchange', fullscreenChange);\n        };\n    }, [player.emitter]);\n    const durationInFrames = (_a = config === null || config === void 0 ? void 0 : config.durationInFrames) !== null && _a !== void 0 ? _a : 1;\n    const layout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        if (!config || !canvasSize) {\n            return null;\n        }\n        return calculateCanvasTransformation({\n            canvasSize,\n            compositionHeight: config.height,\n            compositionWidth: config.width,\n            previewSize: 'auto',\n        });\n    }, [canvasSize, config]);\n    const scale = (_b = layout === null || layout === void 0 ? void 0 : layout.scale) !== null && _b !== void 0 ? _b : 1;\n    const initialScaleIgnored = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!initialScaleIgnored.current) {\n            initialScaleIgnored.current = true;\n            return;\n        }\n        player.emitter.dispatchScaleChange(scale);\n    }, [player.emitter, scale]);\n    const { setMediaVolume, setMediaMuted } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SetMediaVolumeContext);\n    const { mediaMuted, mediaVolume } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.MediaVolumeContext);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        player.emitter.dispatchVolumeChange(mediaVolume);\n    }, [player.emitter, mediaVolume]);\n    const isMuted = mediaMuted || mediaVolume === 0;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        player.emitter.dispatchMuteChange({\n            isMuted,\n        });\n    }, [player.emitter, isMuted]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, () => {\n        const methods = {\n            play: player.play,\n            pause: () => {\n                // If, after .seek()-ing, the player was explicitly paused, we don't resume\n                setHasPausedToResume(false);\n                player.pause();\n            },\n            toggle,\n            getContainerNode: () => container.current,\n            getCurrentFrame: player.getCurrentFrame,\n            isPlaying: () => player.playing,\n            seekTo: (f) => {\n                const lastFrame = durationInFrames - 1;\n                const frameToSeekTo = Math.max(0, Math.min(lastFrame, f));\n                // continue playing after seeking if the player was playing before\n                if (player.isPlaying()) {\n                    const pauseToResume = frameToSeekTo !== lastFrame || loop;\n                    setHasPausedToResume(pauseToResume);\n                    player.pause();\n                }\n                if (frameToSeekTo === lastFrame && !loop) {\n                    player.emitter.dispatchEnded();\n                }\n                player.seek(frameToSeekTo);\n            },\n            isFullscreen: () => isFullscreen,\n            requestFullscreen,\n            exitFullscreen,\n            getVolume: () => {\n                if (mediaMuted) {\n                    return 0;\n                }\n                return mediaVolume;\n            },\n            setVolume: (vol) => {\n                if (typeof vol !== 'number') {\n                    throw new TypeError(`setVolume() takes a number, got value of type ${typeof vol}`);\n                }\n                if (isNaN(vol)) {\n                    throw new TypeError(`setVolume() got a number that is NaN. Volume must be between 0 and 1.`);\n                }\n                if (vol < 0 || vol > 1) {\n                    throw new TypeError(`setVolume() got a number that is out of range. Must be between 0 and 1, got ${typeof vol}`);\n                }\n                setMediaVolume(vol);\n            },\n            isMuted: () => isMuted,\n            mute: () => {\n                setMediaMuted(true);\n            },\n            unmute: () => {\n                setMediaMuted(false);\n            },\n            getScale: () => scale,\n        };\n        return Object.assign(player.emitter, methods);\n    }, [\n        durationInFrames,\n        exitFullscreen,\n        isFullscreen,\n        loop,\n        mediaMuted,\n        isMuted,\n        mediaVolume,\n        player,\n        requestFullscreen,\n        setMediaMuted,\n        setMediaVolume,\n        toggle,\n        scale,\n    ]);\n    const VideoComponent = video ? video.component : null;\n    const outerStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return calculateOuterStyle({ canvasSize, config, style });\n    }, [canvasSize, config, style]);\n    const outer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return calculateOuter({ config, layout, scale });\n    }, [config, layout, scale]);\n    const containerStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return calculateContainerStyle({ canvasSize, config, layout, scale });\n    }, [canvasSize, config, layout, scale]);\n    const onError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((error) => {\n        player.pause();\n        // Pay attention to `this context`\n        player.emitter.dispatchError(error);\n    }, [player]);\n    const onFullscreenButtonClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        e.stopPropagation();\n        requestFullscreen();\n    }, [requestFullscreen]);\n    const onExitFullscreenButtonClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        e.stopPropagation();\n        exitFullscreen();\n    }, [exitFullscreen]);\n    const onSingleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e) => {\n        toggle(e);\n    }, [toggle]);\n    const onSeekStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        setSeeking(true);\n    }, []);\n    const onSeekEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        setSeeking(false);\n    }, []);\n    const onDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n        if (isFullscreen) {\n            exitFullscreen();\n        }\n        else {\n            requestFullscreen();\n        }\n    }, [exitFullscreen, isFullscreen, requestFullscreen]);\n    const [handleClick, handleDoubleClick] = useClickPreventionOnDoubleClick(onSingleClick, onDoubleClick, doubleClickToFullscreen);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (shouldAutoplay) {\n            player.play();\n            setShouldAutoPlay(false);\n        }\n    }, [shouldAutoplay, player]);\n    const loadingMarkup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return renderLoading\n            ? renderLoading({\n                height: outerStyle.height,\n                width: outerStyle.width,\n            })\n            : null;\n    }, [outerStyle.height, outerStyle.width, renderLoading]);\n    if (!config) {\n        return null;\n    }\n    const poster = renderPoster\n        ? renderPoster({\n            height: outerStyle.height,\n            width: outerStyle.width,\n        })\n        : null;\n    if (poster === undefined) {\n        throw new TypeError('renderPoster() must return a React element, but undefined was returned');\n    }\n    const shouldShowPoster = poster &&\n        [\n            showPosterWhenPaused && !player.isPlaying() && !seeking,\n            showPosterWhenEnded && player.isLastFrame && !player.isPlaying(),\n            showPosterWhenUnplayed && !player.hasPlayed && !player.isPlaying(),\n        ].some(Boolean);\n    const content = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: outer, onClick: clickToPlay ? handleClick : undefined, onDoubleClick: doubleClickToFullscreen ? handleDoubleClick : undefined, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: containerStyle, className: PLAYER_CSS_CLASSNAME, children: VideoComponent ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ErrorBoundary, { onError: onError, errorFallback: errorFallback, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.ClipComposition, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(VideoComponent, { ...((_c = video === null || video === void 0 ? void 0 : video.props) !== null && _c !== void 0 ? _c : {}), ...(inputProps !== null && inputProps !== void 0 ? inputProps : {}) }) }) })) : null }) }), shouldShowPoster ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: outer, onClick: clickToPlay ? handleClick : undefined, onDoubleClick: doubleClickToFullscreen ? handleDoubleClick : undefined, children: poster })) : null, controls ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Controls, { fps: config.fps, durationInFrames: config.durationInFrames, player: player, containerRef: container, onFullscreenButtonClick: onFullscreenButtonClick, isFullscreen: isFullscreen, allowFullscreen: allowFullscreen, showVolumeControls: showVolumeControls, onExitFullscreenButtonClick: onExitFullscreenButtonClick, spaceKeyToPlayOrPause: spaceKeyToPlayOrPause, onSeekEnd: onSeekEnd, onSeekStart: onSeekStart, inFrame: inFrame, outFrame: outFrame, initiallyShowControls: initiallyShowControls, canvasSize: canvasSize, renderFullscreenButton: renderFullscreenButton, renderPlayPauseButton: renderPlayPauseButton, alwaysShowControls: alwaysShowControls, showPlaybackRateControl: showPlaybackRateControl })) : null] }));\n    if (IS_NODE && !doesReactVersionSupportSuspense$1) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { ref: container, style: outerStyle, className: className, children: content }));\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { ref: container, style: outerStyle, className: className, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, { fallback: loadingMarkup, children: content }) }));\n};\nvar PlayerUI$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(PlayerUI);\n\nconst VOLUME_PERSISTANCE_KEY = 'remotion.volumePreference';\nconst persistVolume = (volume) => {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    window.localStorage.setItem(VOLUME_PERSISTANCE_KEY, String(volume));\n};\nconst getPreferredVolume = () => {\n    if (typeof window === 'undefined') {\n        return 1;\n    }\n    const val = window.localStorage.getItem(VOLUME_PERSISTANCE_KEY);\n    return val ? Number(val) : 1;\n};\n\nconst PLAYER_COMP_ID = 'player-comp';\nconst SharedPlayerContexts = ({ children, timelineContext, fps, compositionHeight, compositionWidth, durationInFrames, component, numberOfSharedAudioTags, initiallyMuted, }) => {\n    const compositionManagerContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const context = {\n            compositions: [\n                {\n                    component: component,\n                    durationInFrames,\n                    height: compositionHeight,\n                    width: compositionWidth,\n                    fps,\n                    id: PLAYER_COMP_ID,\n                    nonce: 777,\n                    folderName: null,\n                    parentFolderName: null,\n                    schema: null,\n                    calculateMetadata: null,\n                },\n            ],\n            folders: [],\n            registerFolder: () => undefined,\n            unregisterFolder: () => undefined,\n            registerComposition: () => undefined,\n            unregisterComposition: () => undefined,\n            currentCompositionMetadata: null,\n            setCurrentCompositionMetadata: () => undefined,\n            canvasContent: { type: 'composition', compositionId: 'player-comp' },\n            setCanvasContent: () => undefined,\n        };\n        return context;\n    }, [component, durationInFrames, compositionHeight, compositionWidth, fps]);\n    const [mediaMuted, setMediaMuted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => initiallyMuted);\n    const [mediaVolume, setMediaVolume] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => getPreferredVolume());\n    const mediaVolumeContextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            mediaMuted,\n            mediaVolume,\n        };\n    }, [mediaMuted, mediaVolume]);\n    const setMediaVolumeAndPersist = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((vol) => {\n        setMediaVolume(vol);\n        persistVolume(vol);\n    }, []);\n    const setMediaVolumeContextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            setMediaMuted,\n            setMediaVolume: setMediaVolumeAndPersist,\n        };\n    }, [setMediaVolumeAndPersist]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CanUseRemotionHooksProvider, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext.Provider, { value: timelineContext, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CompositionManager.Provider, { value: compositionManagerContext, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.ResolveCompositionConfig, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.PrefetchProvider, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.DurationsContextProvider, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.MediaVolumeContext.Provider, { value: mediaVolumeContextValue, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.NativeLayersProvider, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SetMediaVolumeContext.Provider, { value: setMediaVolumeContextValue, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SharedAudioContextProvider, { numberOfAudioTags: numberOfSharedAudioTags, component: component, children: children }) }) }) }) }) }) }) }) }) }));\n};\n\nconst validateSingleFrame = (frame, variableName) => {\n    if (typeof frame === 'undefined' || frame === null) {\n        return frame !== null && frame !== void 0 ? frame : null;\n    }\n    if (typeof frame !== 'number') {\n        throw new TypeError(`\"${variableName}\" must be a number, but is ${JSON.stringify(frame)}`);\n    }\n    if (Number.isNaN(frame)) {\n        throw new TypeError(`\"${variableName}\" must not be NaN, but is ${JSON.stringify(frame)}`);\n    }\n    if (!Number.isFinite(frame)) {\n        throw new TypeError(`\"${variableName}\" must be finite, but is ${JSON.stringify(frame)}`);\n    }\n    if (frame % 1 !== 0) {\n        throw new TypeError(`\"${variableName}\" must be an integer, but is ${JSON.stringify(frame)}`);\n    }\n    return frame;\n};\nconst validateInOutFrames = ({ inFrame, durationInFrames, outFrame, }) => {\n    const validatedInFrame = validateSingleFrame(inFrame, 'inFrame');\n    const validatedOutFrame = validateSingleFrame(outFrame, 'outFrame');\n    if (validatedInFrame === null && validatedOutFrame === null) {\n        return;\n    }\n    // Must not be over the duration\n    if (validatedInFrame !== null && validatedInFrame > durationInFrames - 1) {\n        throw new Error('inFrame must be less than (durationInFrames - 1), but is ' +\n            validatedInFrame);\n    }\n    if (validatedOutFrame !== null && validatedOutFrame > durationInFrames - 1) {\n        throw new Error('outFrame must be less than (durationInFrames - 1), but is ' +\n            validatedOutFrame);\n    }\n    // Must not be under 0\n    if (validatedInFrame !== null && validatedInFrame < 0) {\n        throw new Error('inFrame must be greater than 0, but is ' + validatedInFrame);\n    }\n    if (validatedOutFrame !== null && validatedOutFrame <= 0) {\n        throw new Error(`outFrame must be greater than 0, but is ${validatedOutFrame}. If you want to render a single frame, use <Thumbnail /> instead.`);\n    }\n    if (validatedOutFrame !== null &&\n        validatedInFrame !== null &&\n        validatedOutFrame <= validatedInFrame) {\n        throw new Error('outFrame must be greater than inFrame, but is ' +\n            validatedOutFrame +\n            ' <= ' +\n            validatedInFrame);\n    }\n};\n\nconst validateInitialFrame = ({ initialFrame, durationInFrames, }) => {\n    if (typeof durationInFrames !== 'number') {\n        throw new Error(`\\`durationInFrames\\` must be a number, but is ${JSON.stringify(durationInFrames)}`);\n    }\n    if (typeof initialFrame === 'undefined') {\n        return;\n    }\n    if (typeof initialFrame !== 'number') {\n        throw new Error(`\\`initialFrame\\` must be a number, but is ${JSON.stringify(initialFrame)}`);\n    }\n    if (Number.isNaN(initialFrame)) {\n        throw new Error(`\\`initialFrame\\` must be a number, but is NaN`);\n    }\n    if (!Number.isFinite(initialFrame)) {\n        throw new Error(`\\`initialFrame\\` must be a number, but is Infinity`);\n    }\n    if (initialFrame % 1 !== 0) {\n        throw new Error(`\\`initialFrame\\` must be an integer, but is ${JSON.stringify(initialFrame)}`);\n    }\n    if (initialFrame > durationInFrames - 1) {\n        throw new Error(`\\`initialFrame\\` must be less or equal than \\`durationInFrames - 1\\`, but is ${JSON.stringify(initialFrame)}`);\n    }\n};\n\nconst validatePlaybackRate = (playbackRate) => {\n    if (playbackRate === undefined) {\n        return;\n    }\n    if (playbackRate > 4) {\n        throw new Error(`The highest possible playback rate is 4. You passed: ${playbackRate}`);\n    }\n    if (playbackRate < -4) {\n        throw new Error(`The lowest possible playback rate is -4. You passed: ${playbackRate}`);\n    }\n    if (playbackRate === 0) {\n        throw new Error(`A playback rate of 0 is not supported.`);\n    }\n};\n\n/* eslint-disable prefer-destructuring */\nconst validateFps = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.validateFps;\nconst validateDimension = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.validateDimension;\nconst validateDurationInFrames = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.validateDurationInFrames;\nconst validateDefaultAndInputProps = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.validateDefaultAndInputProps;\n\nconst componentOrNullIfLazy = (props) => {\n    if ('component' in props) {\n        return props.component;\n    }\n    return null;\n};\nconst PlayerFn = ({ durationInFrames, compositionHeight, compositionWidth, fps, inputProps, style, controls = false, loop = false, autoPlay = false, showVolumeControls = true, allowFullscreen = true, clickToPlay, doubleClickToFullscreen = false, spaceKeyToPlayOrPause = true, moveToBeginningWhenEnded = true, numberOfSharedAudioTags = 5, errorFallback = () => '⚠️', playbackRate = 1, renderLoading, className, showPosterWhenUnplayed, showPosterWhenEnded, showPosterWhenPaused, initialFrame, renderPoster, inFrame, outFrame, initiallyShowControls, renderFullscreenButton, renderPlayPauseButton, alwaysShowControls = false, initiallyMuted = false, showPlaybackRateControl = false, ...componentProps }, ref) => {\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n            window.remotion_isPlayer = true;\n        }, []);\n    }\n    // @ts-expect-error\n    if (componentProps.defaultProps !== undefined) {\n        throw new Error('The <Player /> component does not accept `defaultProps`, but some were passed. Use `inputProps` instead.');\n    }\n    const componentForValidation = componentOrNullIfLazy(componentProps);\n    // @ts-expect-error\n    if ((componentForValidation === null || componentForValidation === void 0 ? void 0 : componentForValidation.type) === remotion__WEBPACK_IMPORTED_MODULE_1__.Composition) {\n        throw new TypeError(`'component' should not be an instance of <Composition/>. Pass the React component directly, and set the duration, fps and dimensions as separate props. See https://www.remotion.dev/docs/player/examples for an example.`);\n    }\n    if (componentForValidation === remotion__WEBPACK_IMPORTED_MODULE_1__.Composition) {\n        throw new TypeError(`'component' must not be the 'Composition' component. Pass your own React component directly, and set the duration, fps and dimensions as separate props. See https://www.remotion.dev/docs/player/examples for an example.`);\n    }\n    const component = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useLazyComponent(componentProps);\n    validateInitialFrame({ initialFrame, durationInFrames });\n    const [frame, setFrame] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => ({\n        [PLAYER_COMP_ID]: initialFrame !== null && initialFrame !== void 0 ? initialFrame : 0,\n    }));\n    const [playing, setPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [rootId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('player-comp');\n    const [emitter] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => new PlayerEmitter());\n    const rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const audioAndVideoTags = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const imperativePlaying = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const [currentPlaybackRate, setCurrentPlaybackRate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(playbackRate);\n    if (typeof compositionHeight !== 'number') {\n        throw new TypeError(`'compositionHeight' must be a number but got '${typeof compositionHeight}' instead`);\n    }\n    if (typeof compositionWidth !== 'number') {\n        throw new TypeError(`'compositionWidth' must be a number but got '${typeof compositionWidth}' instead`);\n    }\n    validateDimension(compositionHeight, 'compositionHeight', 'of the <Player /> component');\n    validateDimension(compositionWidth, 'compositionWidth', 'of the <Player /> component');\n    validateDurationInFrames(durationInFrames, {\n        component: 'of the <Player/> component',\n        allowFloats: false,\n    });\n    validateFps(fps, 'as a prop of the <Player/> component', false);\n    validateDefaultAndInputProps(inputProps, 'inputProps', null);\n    validateInOutFrames({\n        durationInFrames,\n        inFrame,\n        outFrame,\n    });\n    if (typeof controls !== 'boolean' && typeof controls !== 'undefined') {\n        throw new TypeError(`'controls' must be a boolean or undefined but got '${typeof controls}' instead`);\n    }\n    if (typeof autoPlay !== 'boolean' && typeof autoPlay !== 'undefined') {\n        throw new TypeError(`'autoPlay' must be a boolean or undefined but got '${typeof autoPlay}' instead`);\n    }\n    if (typeof loop !== 'boolean' && typeof loop !== 'undefined') {\n        throw new TypeError(`'loop' must be a boolean or undefined but got '${typeof loop}' instead`);\n    }\n    if (typeof doubleClickToFullscreen !== 'boolean' &&\n        typeof doubleClickToFullscreen !== 'undefined') {\n        throw new TypeError(`'doubleClickToFullscreen' must be a boolean or undefined but got '${typeof doubleClickToFullscreen}' instead`);\n    }\n    if (typeof showVolumeControls !== 'boolean' &&\n        typeof showVolumeControls !== 'undefined') {\n        throw new TypeError(`'showVolumeControls' must be a boolean or undefined but got '${typeof showVolumeControls}' instead`);\n    }\n    if (typeof allowFullscreen !== 'boolean' &&\n        typeof allowFullscreen !== 'undefined') {\n        throw new TypeError(`'allowFullscreen' must be a boolean or undefined but got '${typeof allowFullscreen}' instead`);\n    }\n    if (typeof clickToPlay !== 'boolean' && typeof clickToPlay !== 'undefined') {\n        throw new TypeError(`'clickToPlay' must be a boolean or undefined but got '${typeof clickToPlay}' instead`);\n    }\n    if (typeof spaceKeyToPlayOrPause !== 'boolean' &&\n        typeof spaceKeyToPlayOrPause !== 'undefined') {\n        throw new TypeError(`'spaceKeyToPlayOrPause' must be a boolean or undefined but got '${typeof spaceKeyToPlayOrPause}' instead`);\n    }\n    if (typeof numberOfSharedAudioTags !== 'number' ||\n        numberOfSharedAudioTags % 1 !== 0 ||\n        !Number.isFinite(numberOfSharedAudioTags) ||\n        Number.isNaN(numberOfSharedAudioTags) ||\n        numberOfSharedAudioTags < 0) {\n        throw new TypeError(`'numberOfSharedAudioTags' must be an integer but got '${numberOfSharedAudioTags}' instead`);\n    }\n    validatePlaybackRate(currentPlaybackRate);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        emitter.dispatchRateChange(currentPlaybackRate);\n    }, [emitter, currentPlaybackRate]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        setCurrentPlaybackRate(playbackRate);\n    }, [playbackRate]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, () => rootRef.current, []);\n    const timelineContextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            frame,\n            playing,\n            rootId,\n            playbackRate: currentPlaybackRate,\n            imperativePlaying,\n            setPlaybackRate: (rate) => {\n                setCurrentPlaybackRate(rate);\n            },\n            audioAndVideoTags,\n        };\n    }, [frame, currentPlaybackRate, playing, rootId]);\n    const setTimelineContextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            setFrame,\n            setPlaying,\n        };\n    }, [setFrame]);\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n            // Inject CSS only on client, and also only after the Player has hydrated\n            remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CSSUtils.injectCSS(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CSSUtils.makeDefaultCSS(`.${PLAYER_CSS_CLASSNAME}`, '#fff'));\n        }, []);\n    }\n    const actualInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => inputProps !== null && inputProps !== void 0 ? inputProps : {}, [inputProps]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.IsPlayerContextProvider, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SharedPlayerContexts, { timelineContext: timelineContextValue, component: component, compositionHeight: compositionHeight, compositionWidth: compositionWidth, durationInFrames: durationInFrames, fps: fps, numberOfSharedAudioTags: numberOfSharedAudioTags, initiallyMuted: initiallyMuted, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.SetTimelineContext.Provider, { value: setTimelineContextValue, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlayerEventEmitterContext.Provider, { value: emitter, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PlayerUI$1, { ref: rootRef, renderLoading: renderLoading, autoPlay: Boolean(autoPlay), loop: Boolean(loop), controls: Boolean(controls), errorFallback: errorFallback, style: style, inputProps: actualInputProps, allowFullscreen: Boolean(allowFullscreen), moveToBeginningWhenEnded: Boolean(moveToBeginningWhenEnded), clickToPlay: typeof clickToPlay === 'boolean'\n                            ? clickToPlay\n                            : Boolean(controls), showVolumeControls: Boolean(showVolumeControls), doubleClickToFullscreen: Boolean(doubleClickToFullscreen), spaceKeyToPlayOrPause: Boolean(spaceKeyToPlayOrPause), playbackRate: currentPlaybackRate, className: className !== null && className !== void 0 ? className : undefined, showPosterWhenUnplayed: Boolean(showPosterWhenUnplayed), showPosterWhenEnded: Boolean(showPosterWhenEnded), showPosterWhenPaused: Boolean(showPosterWhenPaused), renderPoster: renderPoster, inFrame: inFrame !== null && inFrame !== void 0 ? inFrame : null, outFrame: outFrame !== null && outFrame !== void 0 ? outFrame : null, initiallyShowControls: initiallyShowControls !== null && initiallyShowControls !== void 0 ? initiallyShowControls : true, renderFullscreen: renderFullscreenButton !== null && renderFullscreenButton !== void 0 ? renderFullscreenButton : null, renderPlayPauseButton: renderPlayPauseButton !== null && renderPlayPauseButton !== void 0 ? renderPlayPauseButton : null, alwaysShowControls: alwaysShowControls, showPlaybackRateControl: showPlaybackRateControl }) }) }) }) }));\n};\nconst forward$1 = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef;\n/**\n * @description A component which can be rendered in a regular React App (for example: Vite, Next.js) to display a Remotion video.\n * @see [Documentation](https://www.remotion.dev/docs/player/player)\n */\nconst Player = forward$1(PlayerFn);\n\nconst useThumbnail = () => {\n    const emitter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThumbnailEmitterContext);\n    if (!emitter) {\n        throw new TypeError('Expected Player event emitter context');\n    }\n    const returnValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return {\n            emitter,\n        };\n    }, [emitter]);\n    return returnValue;\n};\n\nconst reactVersion = react__WEBPACK_IMPORTED_MODULE_0__.version.split('.')[0];\nif (reactVersion === '0') {\n    throw new Error(`Version ${reactVersion} of \"react\" is not supported by Remotion`);\n}\nconst doesReactVersionSupportSuspense = parseInt(reactVersion, 10) >= 18;\nconst ThumbnailUI = ({ style, inputProps, errorFallback, renderLoading, className }, ref) => {\n    var _a, _b;\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const video = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useVideo();\n    const container = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const canvasSize = useElementSize(container, {\n        triggerOnWindowResize: false,\n        shouldApplyCssTransforms: false,\n    });\n    const layout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        if (!config || !canvasSize) {\n            return null;\n        }\n        return calculateCanvasTransformation({\n            canvasSize,\n            compositionHeight: config.height,\n            compositionWidth: config.width,\n            previewSize: 'auto',\n        });\n    }, [canvasSize, config]);\n    const scale = (_a = layout === null || layout === void 0 ? void 0 : layout.scale) !== null && _a !== void 0 ? _a : 1;\n    const thumbnail = useThumbnail();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, () => {\n        const methods = {\n            getContainerNode: () => container.current,\n            getScale: () => scale,\n        };\n        return Object.assign(thumbnail.emitter, methods);\n    }, [scale, thumbnail.emitter]);\n    const VideoComponent = video ? video.component : null;\n    const outerStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return calculateOuterStyle({ config, style, canvasSize });\n    }, [canvasSize, config, style]);\n    const outer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return calculateOuter({ config, layout, scale });\n    }, [config, layout, scale]);\n    const containerStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return calculateContainerStyle({\n            canvasSize,\n            config,\n            layout,\n            scale,\n        });\n    }, [canvasSize, config, layout, scale]);\n    const onError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((error) => {\n        // Pay attention to `this context`\n        thumbnail.emitter.dispatchError(error);\n    }, [thumbnail.emitter]);\n    const rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, () => rootRef.current, []);\n    const loadingMarkup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return renderLoading\n            ? renderLoading({\n                height: outerStyle.height,\n                width: outerStyle.width,\n            })\n            : null;\n    }, [outerStyle.height, outerStyle.width, renderLoading]);\n    if (!config) {\n        return null;\n    }\n    const content = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: outer, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { style: containerStyle, className: PLAYER_CSS_CLASSNAME, children: VideoComponent ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ErrorBoundary, { onError: onError, errorFallback: errorFallback, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(VideoComponent, { ...((_b = video === null || video === void 0 ? void 0 : video.props) !== null && _b !== void 0 ? _b : {}), ...(inputProps !== null && inputProps !== void 0 ? inputProps : {}) }) })) : null }) }));\n    if (IS_NODE && !doesReactVersionSupportSuspense) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { ref: container, style: outerStyle, className: className, children: content }));\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { ref: container, style: outerStyle, className: className, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, { fallback: loadingMarkup, children: content }) }));\n};\nvar ThumbnailUI$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(ThumbnailUI);\n\nconst ThumbnailFn = ({ frameToDisplay, style, inputProps, compositionHeight, compositionWidth, durationInFrames, fps, className, errorFallback = () => '⚠️', renderLoading, ...componentProps }, ref) => {\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n            window.remotion_isPlayer = true;\n        }, []);\n    }\n    const [thumbnailId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => String((0,remotion__WEBPACK_IMPORTED_MODULE_1__.random)(null)));\n    const rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const timelineState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const value = {\n            playing: false,\n            frame: {\n                [PLAYER_COMP_ID]: frameToDisplay,\n            },\n            rootId: thumbnailId,\n            imperativePlaying: {\n                current: false,\n            },\n            playbackRate: 1,\n            setPlaybackRate: () => {\n                throw new Error('thumbnail');\n            },\n            audioAndVideoTags: { current: [] },\n        };\n        return value;\n    }, [frameToDisplay, thumbnailId]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, () => rootRef.current, []);\n    const Component = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useLazyComponent(componentProps);\n    const [emitter] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => new ThumbnailEmitter());\n    const passedInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        return inputProps !== null && inputProps !== void 0 ? inputProps : {};\n    }, [inputProps]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.IsPlayerContextProvider, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SharedPlayerContexts, { timelineContext: timelineState, component: Component, compositionHeight: compositionHeight, compositionWidth: compositionWidth, durationInFrames: durationInFrames, fps: fps, numberOfSharedAudioTags: 0, initiallyMuted: true, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThumbnailEmitterContext.Provider, { value: emitter, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ThumbnailUI$1, { className: className, errorFallback: errorFallback, inputProps: passedInputProps, renderLoading: renderLoading, style: style }) }) }) }));\n};\nconst forward = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef;\n/**\n * @description A component which can be rendered in a regular React App (for example: Create React App, Next.js) to display a single frame of a video.\n * @see [Documentation](https://www.remotion.dev/docs/player/thumbnail)\n */\nconst Thumbnail = forward(ThumbnailFn);\n\nconst PlayerInternals = {\n    PlayerEventEmitterContext,\n    PlayerEmitter,\n    usePlayer,\n    usePlayback,\n    useElementSize,\n    calculateCanvasTransformation,\n    useHoverState,\n    updateAllElementsSizes,\n    calculateScale,\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@remotion+player@4.0.47_react-dom@18.2.0_react@18.2.0/node_modules/@remotion/player/dist/esm/index.mjs\n");

/***/ })

};
;